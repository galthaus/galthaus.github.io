{
  "attributes": [
    { "order": 0, "short": "STR", "long": "Strength", "type": "Number" },
    { "order": 1, "short": "DEX", "long": "Dexterity", "type": "Number" },
    { "order": 2, "short": "CON", "long": "Constitution", "type": "Number" },
    { "order": 3, "short": "INT", "long": "Intelligence", "type": "Number" },
    { "order": 4, "short": "WIS", "long": "Wisdom", "type": "Number" },
    { "order": 5, "short": "CHA", "long": "Charisma", "type": "Number" }
  ],
  "dice": [
    { "order": 0, "short": "d4", "long": "d4", "type": "Number" },
    { "order": 1, "short": "d6", "long": "d6", "type": "Number" },
    { "order": 2, "short": "d8", "long": "d8", "type": "Number" },
    { "order": 3, "short": "d10", "long": "d10", "type": "Number" },
    { "order": 4, "short": "d12", "long": "d12", "type": "Number" },
    { "order": 5, "short": "d20", "long": "d20", "type": "Number" }
  ],
  "occupations": [
    { "order": 0, "short": "Academic", "long": "Academic", "type": "Occupation" },
    { "order": 0, "short": "Artisan", "long": "Artisan", "type": "Occupation" }
  ],
  "skills": [
    { "order": 0, "short": "painting", "long": "painting", "type": "Number" },
    { "order": 10, "short": "dancing", "long": "dancing", "type": "Number" }
  ],
  "feats": [
    { "order": 0, "short": "feinting", "long": "feinting", "type": "Number" },
    { "order": 10, "short": "power attack", "long": "power attack", "type": "Number" }
  ],
  "charts": {
    "bab": {
      "best": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
      "better": [0, 1, 2, 3, 3, 4, 5, 6, 6, 7],
      "good": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
    },
    "fort": {
      "best": [1, 2, 2, 2, 3, 3, 4, 4, 4, 5 ],
      "better": [],
      "good": [0, 0, 1, 1, 1, 2, 2, 2, 3, 3 ]
    },
    "ref": {
      "best": [1, 2, 2, 2, 3, 3, 4, 4, 4, 5 ],
      "better": [],
      "good": [0, 0, 1, 1, 1, 2, 2, 2, 3, 3 ]
    },
    "will": {
      "best": [1, 2, 2, 2, 3, 3, 4, 4, 4, 5 ],
      "better": [],
      "good": [0, 0, 1, 1, 1, 2, 2, 2, 3, 3 ]
    },
    "defense": {
      "best": [ 3, 4, 4, 5, 5, 6, 6, 7, 7, 8 ],
      "good": [ 1, 2, 2, 3, 3, 3, 4, 4, 5, 5 ]
    },
    "reputation": {
      "better": [ 0, 0, 1, 1, 1, 2, 2, 2, 3, 3 ],
      "good": [ 0, 0, 0, 0, 1, 1, 1, 1, 2, 2 ]
    }
  },
  "classes": [
    {
      "order": 0,
      "short": "Strong",
      "long": "Strong Hero",
      "type": "Class",
      "charts": {
        "bab": "best",
        "fort": "best",
        "ref": "good",
        "will": "good",
        "defense": "better",
        "reputation": "good"
      },
      "Features": [ "Talent", "Bonus Feat", "Talent", "Bonus Feat", "Talent", "Bonus Feat",
                    "Talent", "Feat", "Talent", "Feat" ],
      "Bonus Feat List": [
        "Animal Affinity", "Archaic Weapons Proficiency",
        "Athletic", "Blind-Fight", "Brawl", "Cleave", "Combat Martial Arts",
        "Combat Reflexes", "Great Cleave", "Improved Brawl",
        "Improved Combat Martial Arts", "Improvised Weapon Proficiency",
        "Improvised Weapon Damage", "Power Attack", "Weapon Focus"],
      "GritDie": 8,
      "ActionPoints": "5 + 0.5*characterlevel",
      "SkillPoints": "3+IntMod",
      "StartSkillPoints": "4*(3+IntMod)",
      "StartingFeats": "Simple Weapons Proficiency",
      "StartingFeatCount": 2,
      "Talents": {
        "Extreme Effort": {
          "requires": [],
          "details": "+2 to Strength Check or Strength Related Skills and takes a full round"
        },
        "Improved Extreme Effort": {
          "requires": ["Extreme Effort"],
          "details": "+4 to Strength Check or Strength Related Skills and takes a full round"
        },
        "Advanced Extreme Effort": {
          "requires": ["Improved Extreme Effort", "Extreme Effort"],
          "details": "+6 to Strength Check or Strength Related Skills and takes a full round"
        },
        "Ignore Hardness": {
          "requires": [],
          "details": "Ignore 2 points of object hardness"
        },
        "Improved Ignore Hardness": {
          "requires": ["Ignore Hardnerss"],
          "details": "Ignore 2 points of object hardness (stacks with prereqs)"
        },
        "Advanced Ignore Hardness": {
          "requires": ["Improved Ignore Hardness", "Ignore Hardnerss"],
          "details": "Ignore 2 points of object hardness (stacks with prereqs)"
        },
        "Melee Smash": {
          "requires": [],
          "details": "+1 Melee Damage"
        },
        "Improved Melee Smash": {
          "requires": ["Melee Damage"],
          "details": "+1 Melee Damage (stacks with prereqs)"
        },
        "Advanced Melee Smash": {
          "requires": ["Improved Melee Damage", "Melee Damage"],
          "details": "+1 Melee Damage (stacks with prereqs)"
        }
      }
    }
  ],

  "ledger": {
    "Roll": {
      "Stat": {
        "type": "attributes"
      },
      "Grit": {
        "type": "dice"
      }
    },
    "Spend": {
      "Occupation": {
        "type": "occupations"
      },
      "Class": {
        "type": "classes"
      },
      "Stat": {
        "type": "attributes"
      },
      "Skill": {
        "type": "skills"
      },
      "Feat": {
        "type": "feats"
      },
      "Talent": {
        "type": "talents"
      }
    },
    "Buy": {
      "Equipment": {
        "type": "equipment"
      }
    }
  },

  "ledger_calculations": [
    { "value": "character.character_info.misc.grit",
      "eval": "ledgerSum(character.ledger, 'Roll', 'Grit', '*')" },

    { "value": "character.character_info.attributes.strength.value",
      "eval": "ledgerEntry(character.ledger, 'Roll', 'Stat', 'Strength') + ledgerSum(character.ledger, 'Spend', 'Stat', 'Strength')" },
    { "value": "character.character_info.attributes.strength.value",
      "eval": "ledgerEntry(character.ledger, 'Roll', 'Stat', 'Strength') + ledgerSum(character.ledger, 'Spend', 'Stat', 'Strength')" },
    { "value": "character.character_info.attributes.dexterity.value",
      "eval": "ledgerEntry(character.ledger, 'Roll', 'Stat', 'Dexterity') + ledgerSum(character.ledger, 'Spend', 'Stat', 'Dexterity')" },
    { "value": "character.character_info.attributes.constitution.value",
      "eval": "ledgerEntry(character.ledger, 'Roll', 'Stat', 'Constitution') + ledgerSum(character.ledger, 'Spend', 'Stat', 'Constitution')" },
    { "value": "character.character_info.attributes.intelligence.value",
      "eval": "ledgerEntry(character.ledger, 'Roll', 'Stat', 'Intelligence') + ledgerSum(character.ledger, 'Spend', 'Stat', 'Intelligence')" },
    { "value": "character.character_info.attributes.wisdom.value",
      "eval": "ledgerEntry(character.ledger, 'Roll', 'Stat', 'Wisdom') + ledgerSum(character.ledger, 'Spend', 'Stat', 'Wisdom')" },
    { "value": "character.character_info.attributes.charisma.value",
      "eval": "ledgerEntry(character.ledger, 'Roll', 'Stat', 'Charisma') + ledgerSum(character.ledger, 'Spend', 'Stat', 'Charisma')" }
  ],

  "calculations": [
    { "value": "character.character_info.attributes.strength.mod", 
       "eval": "Math.floor((Number(character.character_info.attributes.strength.value) + Number(character.character_info.attributes.strength.tmpadj) - 10) / 2)" },
    { "value": "character.character_info.attributes.dexterity.mod", 
       "eval": "Math.floor((Number(character.character_info.attributes.dexterity.value) + Number(character.character_info.attributes.dexterity.tmpadj) - 10) / 2)" },
    { "value": "character.character_info.attributes.constitution.mod", 
       "eval": "Math.floor((Number(character.character_info.attributes.constitution.value) + Number(character.character_info.attributes.constitution.tmpadj) - 10) / 2)" },
    { "value": "character.character_info.attributes.intelligence.mod", 
       "eval": "Math.floor((Number(character.character_info.attributes.intelligence.value) + Number(character.character_info.attributes.intelligence.tmpadj) - 10) / 2)" },
    { "value": "character.character_info.attributes.wisdom.mod", 
       "eval": "Math.floor((Number(character.character_info.attributes.wisdom.value) + Number(character.character_info.attributes.wisdom.tmpadj) - 10) / 2)" },
    { "value": "character.character_info.attributes.charisma.mod", 
       "eval": "Math.floor((Number(character.character_info.attributes.charisma.value) + Number(character.character_info.attributes.charisma.tmpadj) - 10) / 2)" },

    { "value": "character.character_info.saves.fort.ability",
      "eval": "Number(character.character_info.attributes.constitution.mod)" },
    { "value": "character.character_info.saves.ref.ability",
      "eval": "Number(character.character_info.attributes.dexterity.mod)" },
    { "value": "character.character_info.saves.will.ability",
      "eval": "Number(character.character_info.attributes.wisdom.mod)" },

    { "value": "character.character_info.saves.fort.total",
      "eval": "Number(character.character_info.saves.fort.base) + Number(character.character_info.saves.fort.ability) + Number(character.character_info.saves.fort.misc) + Number(character.character_info.saves.fort.tmp)" },
    { "value": "character.character_info.saves.ref.total",
      "eval": "Number(character.character_info.saves.ref.base) + Number(character.character_info.saves.ref.ability) + Number(character.character_info.saves.ref.misc) + Number(character.character_info.saves.ref.tmp)" },
    { "value": "character.character_info.saves.will.total",
      "eval": "Number(character.character_info.saves.will.base) + Number(character.character_info.saves.will.ability) + Number(character.character_info.saves.will.misc) + Number(character.character_info.saves.will.tmp)" }

  ]

}
